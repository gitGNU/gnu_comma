//===-- basic/Diagnostic.def ---------------------------------- -*- C++ -*-===//
//
// This file is distributed under the MIT license.  See LICENSE.txt for details.
//
// Copyright (C) 2008-2010, Stephen Wilson
//
//===----------------------------------------------------------------------===//

//
// Lexer diagnostics.
//
DIAGNOSTIC(ILLEGAL_ESCAPE, ERROR,
           "Illegal escape sequence `\\%0'.")
DIAGNOSTIC(UNTERMINATED_STRING, ERROR,
           "String literal not terminated.")
DIAGNOSTIC(NEWLINE_IN_STRING_LIT, ERROR,
           "Illegal newline within string literal.")
DIAGNOSTIC(LEADING_ZERO_IN_INTEGER_LIT, ERROR,
           "Invalid integer literal (leading zero).")
DIAGNOSTIC(INVALID_CHARACTER, ERROR,
           "Invalid character `%0'.")
DIAGNOSTIC(CONSECUTIVE_UNDERSCORE, ERROR,
           "Consecutive underscore in identifier.")
DIAGNOSTIC(UNTERMINATED_CHARACTER_LITERAL, ERROR,
           "Character literal not terminated.")
DIAGNOSTIC(EMPTY_CHARACTER_LITERAL, ERROR,
           "Empty character literal.")

//
// Parser diagnostics.
//
DIAGNOSTIC(UNEXPECTED_TOKEN, ERROR,
           "Unexpected token `%0'.")
DIAGNOSTIC(UNEXPECTED_TOKEN_WANTED, ERROR,
           "Unexpected token `%0', wanted `%1'.")
DIAGNOSTIC(PREMATURE_EOS, ERROR,
           "Premature end of stream.")
DIAGNOSTIC(EXPECTED_END_TAG, ERROR,
           "Expected end tag `%s'.")
DIAGNOSTIC(UNEXPECTED_END_TAG, ERROR,
           "Unexpected end tag `%s'.")
DIAGNOSTIC(EMPTY_PARAMS, ERROR,
           "Empty parameter lists are not permitted.")
DIAGNOSTIC(POSITIONAL_FOLLOWING_SELECTED_PARAMETER, ERROR,
           "Positional arguments may not follow keyword selections.")
DIAGNOSTIC(MISSING_RETURN_AFTER_FUNCTION, ERROR,
           "Missing `return' after function declaration.")
DIAGNOSTIC(RETURN_AFTER_PROCEDURE, ERROR,
           "Procedures cannot have return types.")
DIAGNOSTIC(OUT_IN_PARAMETER_MODE, ERROR,
           "Use `in out' instead of `out in' in parameter mode specifications.")
DIAGNOSTIC(EMPTY_ENUMERATION, ERROR,
           "Empty enumerations are not permitted.")
DIAGNOSTIC(NON_STATIC_EXPRESSION, ERROR,
           "Static expression required.")
DIAGNOSTIC(EMPTY_ARRAY_TYPE_INDICES, ERROR,
           "Empty array index profiles are not permitted.")
DIAGNOSTIC(UNKNOWN_ATTRIBUTE, ERROR,
           "Unknown attribute `%0'.")
DIAGNOSTIC(UNKNOWN_PRAGMA, ERROR,
           "Unknown pragma `%0'.")
DIAGNOSTIC(INVALID_PRAGMA_CONTEXT, ERROR,
           "Pragma `%0' cannot be used in this context.")
DIAGNOSTIC(INVALID_ATTRIBUTE_CONTEXT, ERROR,
           "Invalid context for attribute `%0'.")
DIAGNOSTIC(OTHERS_HANDLER_NOT_UNIQUE, ERROR,
           "An others choice for a handler must be unique.")
DIAGNOSTIC(OTHERS_HANDLER_NOT_FINAL, ERROR,
           "A handler covered by an `others' choice must be the last handler.")
DIAGNOSTIC(POSITIONAL_FOLLOWING_KEYED_COMPONENT, ERROR,
           "Positional components may not follow keyed components.")
DIAGNOSTIC(OTHERS_COMPONENT_NOT_FINAL, ERROR,
           "An `others' component must be the last component of an aggregate.")
DIAGNOSTIC(MIXED_LOGICAL_OPERATORS, ERROR,
           "Mixed logical operator in expression.")

//
// Semantic Diagnostics.
//
DIAGNOSTIC(DUPLICATE_FORMAL_PARAM, ERROR,
           "Duplicate formal parameter `%0'.")
DIAGNOSTIC(NOT_A_SIGNATURE, ERROR,
           "Entity does not denote a signature.")
DIAGNOSTIC(NOT_A_DOMAIN, ERROR,
           "Entity does not denote a domain.")
DIAGNOSTIC(NOT_AN_EXPRESSION, ERROR,
           "Entity does not denote an expression.")
DIAGNOSTIC(NOT_AN_EXCEPTION, ERROR,
           "Entity does not denote an exception.")
DIAGNOSTIC(NOT_A_TYPE, ERROR,
           "Entity does not denote a type.")
DIAGNOSTIC(TYPE_CANNOT_DENOTE_VALUE, ERROR,
           "Type cannot denote a value.")
DIAGNOSTIC(EXCEPTION_CANNOT_DENOTE_VALUE, ERROR,
           "Exception cannot denote a value.")
DIAGNOSTIC(DOMAIN_PARAM_DOES_NOT_SATISFY, ERROR,
           "Domain is not a valid actual for the generic parameter `%0'.")
DIAGNOSTIC(TYPE_NOT_VISIBLE, ERROR,
           "The type `%0' is not visible.")
DIAGNOSTIC(WRONG_NUM_ARGS_FOR_TYPE, ERROR,
           "Wrong number of arguments for type `%0'.")
DIAGNOSTIC(SUBROUTINE_REDECLARATION, ERROR,
           "Redeclaration of subroutine `%0' originally defined at `%1'.")
DIAGNOSTIC(CONFLICTING_DECLARATION, ERROR,
           "`%0' conflicts with declaration defined at `%1'.")
DIAGNOSTIC(MISSING_REDECLARATION, ERROR,
           "Multiple ambiguous declarations of `%0' "
           "(inherited from `%1' and `%2'). "
           "Redeclaration required.")
DIAGNOSTIC(TYPE_HAS_NO_SUCH_KEYWORD, ERROR,
           "There is no argument keyword named `%0' defined for type `%0'.")
DIAGNOSTIC(SUBROUTINE_HAS_NO_SUCH_KEYWORD, ERROR,
           "There is no argument keyword named `%0' defined for subroutine `%0'.")
DIAGNOSTIC(DUPLICATE_KEYWORD, ERROR,
           "Duplicate argument keyword `%0'.")
DIAGNOSTIC(PARAM_PROVIDED_POSITIONALLY, ERROR,
           "Argument `%0' already provided by a positional parameter.")
DIAGNOSTIC(OUT_MODE_IN_FUNCTION, ERROR,
           "Function parameters cannot have an `out' mode.")
DIAGNOSTIC(IMPORT_FROM_NON_DOMAIN, ERROR,
           "Expression does not denote a domain, and so cannot be imported.")
DIAGNOSTIC(NAME_NOT_VISIBLE, ERROR,
           "The name `%0' is not visible.")
DIAGNOSTIC(INVALID_CONTEXT_FOR_PROCEDURE, ERROR,
           "Invalid context for procedure.")
DIAGNOSTIC(WRONG_NUM_ARGS_FOR_SUBROUTINE, ERROR,
           "Wrong number of arguments for subroutine `%0'.")
DIAGNOSTIC(INCOMPATIBLE_TYPES, ERROR,
           "Incompatible type.")
DIAGNOSTIC(AMBIGUOUS_EXPRESSION, ERROR,
           "Ambiguous expression.")
DIAGNOSTIC(MULTIPLE_IMPORT_AMBIGUITY, ERROR,
           "Multiple imports cause declaration hiding.")
DIAGNOSTIC(MULTIPLE_CARRIER_DECLARATIONS, ERROR,
           "Multiple carrier declarations.")
DIAGNOSTIC(INDEFINITE_CARRIER_TYPE, ERROR,
           "Carrier types may not be indefinite.")
DIAGNOSTIC(EMPTY_RETURN_IN_FUNCTION, ERROR,
           "Missing value in return from function.")
DIAGNOSTIC(NONEMPTY_RETURN_IN_PROCEDURE, ERROR,
           "Cannot return a value from a procedure.")
DIAGNOSTIC(MULTIPLE_ENUMERATION_LITERALS, ERROR,
           "Multiple enumeration value `%0'.")
DIAGNOSTIC(INVALID_INJ_CONTEXT, ERROR,
           "`inj' expressions can only appear in a domain context.")
DIAGNOSTIC(INVALID_PRJ_CONTEXT, ERROR,
           "`prj' expressions can only appear in a domain context.")
DIAGNOSTIC(CARRIER_TYPE_UNDEFINED, ERROR,
           "Missing carrier definition before call to `inj' or `prj'.")
DIAGNOSTIC(CONFLICTING_TYPE_DECLS, ERROR,
           "Multiple declarations of type `%0'.\n   (inherited from `%1' and `%2')")
DIAGNOSTIC(PERCENT_EQUIVALENT, WARNING,
           "Type expression equivalent to `%%'.")
DIAGNOSTIC(MODEL_FORMAL_SHADOW, ERROR,
           "Formal parameter `%0' shadows type declaration.")
DIAGNOSTIC(REDECLARATION, ERROR,
           "Redeclaration of `%0'.")
DIAGNOSTIC(DECLARATION_CONFLICTS, ERROR,
           "`%0' conflicts with declaration at `%1'.")
DIAGNOSTIC(REDUNDANT_SIGNATURE_INCLUSION, WARNING,
           "Redundant inclusion of signature `%0'.")
DIAGNOSTIC(CONFLICTING_SIGNATURE_INCLUSION, ERROR,
           "Inclusion of signature `%0' provides conflicting declarations.")
DIAGNOSTIC(MISSING_EXPORT, ERROR,
           "Domain `%0' is missing export `%1'.")
DIAGNOSTIC(MISSING_TYPE_COMPLETION, ERROR,
           "Missing completion for type `%0'.")
DIAGNOSTIC(INVALID_TARGET_FOR_ASSIGNMENT, ERROR,
           "Target of assignment does not denote a variable.")
DIAGNOSTIC(LOOP_PARAM_NOT_VARIABLE, ERROR,
           "Loop parameters are not variable.")
DIAGNOSTIC(EXPRESSION_NOT_MODE_COMPATIBLE, ERROR,
           "Expression cannot be used as an \"%0\" parameter.")
DIAGNOSTIC(OPERATOR_ARITY_MISMATCH, ERROR,
           "Wrong number of arguments for operator `%0'.")
DIAGNOSTIC(INVALID_QUALIFIER, ERROR,
           "`%0' cannot qualify an expression.")
DIAGNOSTIC(SELF_RECURSIVE_INSTANCE, ERROR,
           "Cannot form recursive instantiations.")
DIAGNOSTIC(SELF_RECURSIVE_TYPE_DECLARATION, ERROR,
           "Cannot form recursive type declarations.")
DIAGNOSTIC(NAME_REQUIRES_QUAL, ERROR,
           "`%0' requires qualification.")
DIAGNOSTIC(INCOMPATIBLE_MODE_REDECLARATION, ERROR,
           "Parameter mode conflicts with previous definition at `%0'")
DIAGNOSTIC(INVALID_TYPE_PARAM, ERROR,
           "`%0' cannot be used to parameterize a type.")
DIAGNOSTIC(INVALID_SIGNATURE_QUALIFICATION, ERROR,
           "`%0' denotes a signature, and cannot be used as a qualifier "
           "in this context.")
DIAGNOSTIC(EXPECTING_SIGNATURE_QUALIFIER, ERROR,
           "`%0' must be explicitly qualified by its corresponding signature.")
DIAGNOSTIC(NOT_A_SUPERSIGNATURE, ERROR,
           "`%0' does not name a visible supersignature.")
DIAGNOSTIC(NOT_A_COMPONENT_OF, ERROR,
           "`%0' is not a component of `%0'.")
DIAGNOSTIC(WRONG_NUM_SUBSCRIPTS_FOR_ARRAY, ERROR,
           "Wrong number of subscripts for array index.")
DIAGNOSTIC(INVALID_PREFIX_FOR_COMPONENT, ERROR,
           "Invalid prefix for component `%0'.")
DIAGNOSTIC(EXPRESSION_AS_TYPE_PARAM, ERROR,
           "Expressions cannot be used as type parameters.")
DIAGNOSTIC(EXPECTED_PROCEDURE_CALL, ERROR,
           "Expected procedure call.")
DIAGNOSTIC(EXPECTED_DISCRETE_INDEX, ERROR,
           "Expected discrete type for array index.")
DIAGNOSTIC(EXPECTED_ARRAY_FOR_INDEX, ERROR,
           "Expected array type for indexed component.")
DIAGNOSTIC(INVALID_ARRAY_INDEX, ERROR,
           "Invalid array index.")
DIAGNOSTIC(UNCONSTRAINED_ARRAY_OBJECT_REQUIRES_INIT, ERROR,
           "Objects of unconstrained array type require initialization.")
DIAGNOSTIC(EXPECTED_NAMED_SUBROUTINE, ERROR,
           "Expected named subroutine.")
DIAGNOSTIC(VALUE_NOT_IN_RANGE_FOR_TYPE, ERROR,
           "Value not in range for type `%0'.")
DIAGNOSTIC(STRING_COMPONENTS_DO_NOT_SATISFY, ERROR,
           "Cannot resolve string components to type `%0'.")
DIAGNOSTIC(TOO_FEW_ELEMENTS_FOR_TYPE, ERROR,
           "Too few elements for type `%0'.")
DIAGNOSTIC(TOO_MANY_ELEMENTS_FOR_TYPE, ERROR,
           "Too many elements for type `%0'.")
DIAGNOSTIC(ATTRIB_OF_NON_SCALAR, ERROR,
           "Attribute `%0' applied to non-scalar type.")
DIAGNOSTIC(ATTRIB_OF_NON_ARRAY, ERROR,
           "Attribute `%0' requires array valued prefix.")
DIAGNOSTIC(INVALID_ATTRIB_PREFIX, ERROR,
           "Invalid prefix for attribute `%0'.")
DIAGNOSTIC(UNKNOWN_CONVENTION, ERROR,
           "Unknown convention `%0'.")
DIAGNOSTIC(OVERLOADED_IMPORT_NOT_SUPPORTED, ERROR,
           "Overloaded imports are not yet supported.")
DIAGNOSTIC(DUPLICATE_IMPORT_PRAGMAS, ERROR,
           "Duplicate import pragmas for entity `%0'.")
DIAGNOSTIC(INCONSISTENT_AGGREGATE_TYPE, ERROR,
           "Inconsitent type for aggregate component.")
DIAGNOSTIC(INVALID_CONTEXT_FOR_AGGREGATE, ERROR,
           "Invalid context for aggregate expression.")
DIAGNOSTIC(OTHERS_IN_UNCONSTRAINED_CONTEXT, ERROR,
           "\"others\" may not appear in an unconstrained type context.")
DIAGNOSTIC(MIXED_ARRAY_AGGREGATE, ERROR,
           "Array aggregates cannot contain both positional "
           "and keyed components.")
DIAGNOSTIC(DOES_NOT_DENOTE_A_TYPE, ERROR,
           "Expression does not denote a type.")
DIAGNOSTIC(INVALID_SUBTYPE_INDICATION, ERROR,
           "Invalid subtype indication.")
DIAGNOSTIC(EXPECTED_DISCRETE_SUBTYPE, ERROR,
           "A discrete subtype is required.")
DIAGNOSTIC(EXPECTED_DISCRETE_SUBTYPE_OR_RANGE, ERROR,
           "A discrete type or range is required.")
DIAGNOSTIC(TYPE_FOUND_EXPECTED_EXPRESSION, ERROR,
           "Type in expression context.")
DIAGNOSTIC(INCOMPATIBLE_RANGE_TYPES, ERROR,
           "Incompatible types in range.")
DIAGNOSTIC(DYNAMIC_CHOICE_NOT_UNIQUE, ERROR,
           "Dynamic choice in aggregate must be unique.")
DIAGNOSTIC(NULL_CHOICE_NOT_UNIQUE, ERROR,
           "Null choice in aggregate must be unique.")
DIAGNOSTIC(DUPLICATED_AGGREGATE_COMPONENT, ERROR,
           "Aggregate component duplicated at `%0'.")
DIAGNOSTIC(DISCONTINUOUS_CHOICE, ERROR,
           "Discrete choice not continuous. "
           "Values below choice `%0' are not covered.")
DIAGNOSTIC(CANDIDATE_NOTE, NOTE,
           "candidate: %0")
DIAGNOSTIC(EXPECTED_CONSTRAINED_ARRAY_INDEX, ERROR,
           "Expected constrained array index.")
DIAGNOSTIC(EXPECTED_UNCONSTRAINED_ARRAY_INDEX, ERROR,
           "Expected unconstrained array index.")
DIAGNOSTIC(INVALID_RECORD_SELECTOR, ERROR,
           "Invalid selector for record `%0'.")
DIAGNOSTIC(COMPONENT_COVERED_POSITIONALLY, ERROR,
           "Component is covered by a positional parameter.")
DIAGNOSTIC(INCONSISTENT_RECORD_COMPONENT_SELECTORS, ERROR,
           "All component selectors must be of the same type.")
DIAGNOSTIC(INDEFINITE_COMPONENT_TYPE, ERROR,
           "Indefinite component type in aggregate declaration.")
DIAGNOSTIC(UNKNOWN_SELECTED_COMPONENT, ERROR,
           "The name `%0' does not denote a component in type `%1'.")
DIAGNOSTIC(INVALID_CONTEXT_FOR_INCOMPLETE_TYPE, ERROR,
           "Invalid context for incomplete type.")
DIAGNOSTIC(UNREACHABLE_STATEMENT, WARNING,
           "Unreachable statement.")
