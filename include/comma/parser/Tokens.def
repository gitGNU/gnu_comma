//===-- ast/Tokens.def ---------------------------------------- -*- C++ -*-===//
//
// This file is distributed under the MIT license.  See LICENSE.txt for details.
//
// Copyright (C) 2008-2010, Stephen Wilson
//
//===----------------------------------------------------------------------===//
//
// Definitions for all token kinds and corresponding string literals.  This file
// is designed to be #include'ed with one (or all) of the following macros
// defined:
//
//   RESERVED(name, string) :  Defines a token reserved by the language with the
//   specified string as representation.
//
//   GLYPH(name, string) : Defines a glyph (seperator, delimiter, operator)
//   with the specified string as representation.
//
//   TOKEN(name) : Defines literal tokens, identifiers, and all other tokens
//   which do not have a static string representation.
//
//===----------------------------------------------------------------------===//

// Give all macros empty expanders by default, and keep track of which macros we
// have provided a default expansion for.  We clean up all default definitions
// at the end of this file.

#ifndef RESERVED
 #define RESERVED(X, Y)
 #define TOKENS_DEF_KWD_DEFINED
#endif
#ifndef GLYPH
  #define GLYPH(X, Y)
  #define TOKENS_DEF_GLYPH_DEFINED
#endif
#ifndef TOKEN
  #define TOKEN(X)
  #define TOKENS_DEF_TKN_DEFINED
#endif

RESERVED(ABSTRACT,  "abstract")
RESERVED(ADD,       "add")
RESERVED(AND,       "and")
RESERVED(ARRAY,     "array")
RESERVED(CARRIER,   "carrier")
RESERVED(BEGIN,     "begin")
RESERVED(DECLARE,   "declare")
RESERVED(DOMAIN,    "domain")
RESERVED(ELSE,      "else")
RESERVED(ELSIF,     "elsif")
RESERVED(END,       "end")
RESERVED(EXCEPTION, "exception")
RESERVED(FOR,       "for")
RESERVED(FUNCTION,  "function")
RESERVED(GENERIC,   "generic")
RESERVED(IF,        "if")
RESERVED(IMPORT,    "import")
RESERVED(IN,        "in")
RESERVED(INJ,       "inj")
RESERVED(IS,        "is")
RESERVED(LOOP,      "loop")
RESERVED(MOD,       "mod")
RESERVED(NULL,      "null")
RESERVED(OF,        "of")
RESERVED(OUT,       "out")
RESERVED(OTHERS,    "others")
RESERVED(RAISE,     "raise")
RESERVED(PRAGMA,    "pragma")
RESERVED(PRJ,       "prj")
RESERVED(PROCEDURE, "procedure")
RESERVED(RANGE,     "range")
RESERVED(RECORD,    "record")
RESERVED(REM,       "rem")
RESERVED(RENAMES,   "renames")
RESERVED(RETURN,    "return")
RESERVED(REVERSE,   "reverse")
RESERVED(SIGNATURE, "signature")
RESERVED(SUBTYPE,   "subtype")
RESERVED(THEN,      "then")
RESERVED(TYPE,      "type")
RESERVED(WHEN,      "when")
RESERVED(WHILE,     "while")
RESERVED(WITH,      "with")

GLYPH(COMMA,   ",")
GLYPH(COLON,   ":")
GLYPH(DOT,     ".")
GLYPH(SEMI,    ";")
GLYPH(PERCENT, "%")
GLYPH(AMPER,   "&")
GLYPH(STAR,    "*")
GLYPH(PLUS,    "+")
GLYPH(MINUS,   "-")
GLYPH(LESS,    "<")
GLYPH(EQUAL,   "=")
GLYPH(GREAT,   ">")
GLYPH(AT,      "@")
GLYPH(QUOTE,   "'")
GLYPH(FSLASH,  "/")
GLYPH(BAR,     "|")

GLYPH(LPAREN,  "(")
GLYPH(RPAREN,  ")")

GLYPH(DDOT,    "..")
GLYPH(RDARROW, "=>")
GLYPH(LEQ,     "<=")
GLYPH(DIAMOND, "<>")
GLYPH(GEQ,     ">=")
GLYPH(NEQUAL,  "/=")
GLYPH(POW,     "**")
GLYPH(ASSIGN,  ":=")
GLYPH(EOT,     "<EOT>")
GLYPH(ERROR,   "<ERROR>")

TOKEN(IDENTIFIER)
TOKEN(INTEGER)
TOKEN(FLOAT)
TOKEN(STRING)
TOKEN(CHARACTER)

// Clean up default macro definitions.
#ifdef TOKENS_DEF_KWD_DEFINED
  #undef RESERVED
  #undef TOKENS_DEF_KWD_DEFINED
#endif
#ifdef TOKENS_DEF_GLYPH_DEFINED
  #undef GLYPH
  #undef TOKENS_DEF_GLYPH_DEFINED
#endif
#ifdef TOKENS_DEF_TKN_DEFINED
  #undef TOKEN
  #undef TOKENS_DEF_TKN_DEFINED
#endif

