-- Testing array of arrays.

package Test is
   procedure Run;
end Test;

package body Test is
   type Idx is range 1..10;
   type Fixed is array (Idx) of Character;
   type Nested is array (Positive range <>) of Fixed;

   procedure Assert_Nested (S : Nested) is
   begin
      for I in S'Range loop
         for J in S(I)'Range loop
            pragma Assert(S(I)(J) = 'x');
         end loop;
      end loop;
   end Assert_Nested;

   function Make_Nested1 return Nested is
      S : Nested := (1 .. 4 => "xxxxxxxxxx");
   begin
      return S;
   end Make_Nested1;

   function Make_Nested2 return Nested is
      S : Nested := (1 .. 4 => (1 .. 10 => 'x'));
   begin
      return S;
   end Make_Nested2;

   procedure Run is
      S1 : Nested := Make_Nested1;
      S2 : Nested := Make_Nested2;
   begin
      Assert_Nested(S1);
      Assert_Nested(S2);
   end Run;

end Test;
