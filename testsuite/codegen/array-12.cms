-- Array aggregate codegen tests.

package Test is
   procedure Run;
end Test;

package body Test is
   type Arr is array (Integer range 1..10) of Integer;

   procedure Assert_Arr(A : Arr; X : Integer) is
   begin
      for I in A'Range loop
         pragma Assert(A(I) = X);
      end loop;
   end Assert_Arr;

   procedure Run is
      A : Arr;
      X : Integer;
   begin
      X := 99;
      A := (1 => X, 2..9 => X, 10 => X);
      Assert_Arr(A, X);

      X := 88;
      A := (1 => X, 2 => X, 3 => X, 4 => X, 5  => X,
            6 => X, 7 => X, 8 => X, 9 => X, 10 => X);
      Assert_Arr(A, X);

      X := 10;
      A := (1..3 => X, 6 => X, 5 => X, 4 => X, others => X);
      Assert_Arr(A, X);

      X := 0;
      A := (3..10 => X, 1 => X, others => X);
      Assert_Arr(A, X);
   end Run;

end Test;
